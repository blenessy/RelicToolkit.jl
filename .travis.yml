language: julia

allow_failures:
  - julia: nightly

notifications:
  email: false

matrix:
  include:
    - os: linux
      julia:
        - 1.0
    - os: linux
      julia:
        - 1.1
      after_success:
        - julia --project=. -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(process_folder())'
    - os: linux
      julia:
        - 1.2
    - os: linux
      julia:
        - nightly
    - os: osx
      julia:
        - 1.1
    - os: windows
      language: shell
      before_install:
        - choco install julia

script:
  - TEST=SysTests RELIC_TOOLKIT_CURVE=BLS381 julia --compiled-modules=no -e 'import Pkg; Pkg.activate("."); Pkg.build(); Pkg.test(coverage=true)'
  - TEST=UnitTests RELIC_TOOLKIT_CURVE=BLS381 julia --compiled-modules=no -e 'import Pkg; Pkg.activate("."); Pkg.build(); Pkg.test(coverage=true)'
  - TEST=PerfTests RELIC_TOOLKIT_CURVE=BLS381 julia --compiled-modules=no -e 'import Pkg; Pkg.activate("."); Pkg.build(); Pkg.test()'
  - TEST=SysTests RELIC_TOOLKIT_CURVE=BN254 julia --compiled-modules=no -e 'import Pkg; Pkg.activate("."); Pkg.build(); Pkg.test(coverage=true)'
  - TEST=UnitTests RELIC_TOOLKIT_CURVE=BN254 julia --compiled-modules=no -e 'import Pkg; Pkg.activate("."); Pkg.build(); Pkg.test(coverage=true)'
  - TEST=PerfTests RELIC_TOOLKIT_CURVE=BN254 julia --compiled-modules=no -e 'import Pkg; Pkg.activate("."); Pkg.build(); Pkg.test()'

# jobs:
#   include:
#     - stage: "Documentation"
#       julia: 1.0
#       os: linux
#       script:
#         - julia --project=docs/ -e 'using Pkg; Pkg.instantiate();
#                                     Pkg.develop(PackageSpec(path=pwd()))'
#         - julia --project=docs/ docs/make.jl
#       after_success: skip
